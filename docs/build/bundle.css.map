{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "..\\..\\Tab.svelte",
    "..\\..\\TabList.svelte",
    "..\\..\\TabPanel.svelte",
    "..\\..\\App.svelte",
    "..\\..\\CodeEditor.svelte",
    "..\\..\\CodeFlask.svelte",
    "..\\..\\CodeInput.svelte",
    "..\\..\\InteractiveArticle.svelte",
    "..\\..\\IntersectionObserver.svelte",
    "..\\..\\Sandbox.svelte",
    "..\\..\\SideArticle.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import { getContext, onMount, tick } from 'svelte';\n\n  import getId from './id';\n  import { TABS } from './Tabs.svelte';\n\n  let tabEl;\n\n  const tab = {\n    id: getId()\n  };\n  const { registerTab, registerTabElement, selectTab, selectedTab, controls } = getContext(TABS);\n\n  let isSelected;\n  $: isSelected = $selectedTab === tab;\n\n  registerTab(tab);\n\n  onMount(async () => {\n    await tick();\n    registerTabElement(tabEl);\n  });\n</script>\n\n<style>\n\t.svelte-tabs__tab {\n\t\tborder: none;\n\t\tborder-bottom: 2px solid transparent;\n\t\tcolor: #000000;\n    cursor: pointer;\n    list-style: none;\n    display: inline-block;\n    padding: 0.5em 0.75em;\n\t}\n\t\n  .svelte-tabs__tab:focus {\n    outline: thin dotted;\n  }\n\n\t.svelte-tabs__selected {\n\t\tborder-bottom: 2px solid #4F81E5;\n    color: #4F81E5;\n\t}\n</style>\n\n<li\n  bind:this={tabEl}\n  role=\"tab\"\n  id={tab.id}\n  aria-controls={$controls[tab.id]}\n  aria-selected={isSelected}\n  tabindex=\"{isSelected ? 0 : -1}\"\n  class:svelte-tabs__selected={isSelected}\n  class=\"svelte-tabs__tab\"\n  on:click={() => selectTab(tab)}>\n\t<slot></slot>\n</li>\n",
    "<style>\n\t.svelte-tabs__tab-list {\n    border-bottom: 1px solid #CCCCCC;\n    margin: 0;\n    padding: 0;\n\t}\n</style>\n\n<ul role=\"tablist\" class=\"svelte-tabs__tab-list\">\n  <slot></slot>\n</ul>\n",
    "<script>\n  import { getContext } from 'svelte';\n\n  import getId from './id';\n  import { TABS } from './Tabs.svelte';\n\n  const panel = {\n    id: getId()\n  };\n  const { registerPanel, selectedPanel, labeledBy } = getContext(TABS);\n\n  registerPanel(panel);\n</script>\n\n<style>\n  .svelte-tabs__tab-panel {\n    margin-top: 0.5em;\n  }\n</style>\n\n<div \n  id={panel.id}\n  aria-labelledby={$labeledBy[panel.id]}\n  class=\"svelte-tabs__tab-panel\"\n  role=\"tabpanel\">\n  {#if $selectedPanel === panel}\n    <slot></slot>\n  {/if}\n</div>\n",
    "<script>\r\n\timport CodeEditor from './components/CodeEditor.svelte';\r\n\timport InteractiveArticle from './components/InteractiveArticle.svelte';\r\n\timport IntersectionObserver from './components/IntersectionObserver.svelte';\r\n\r\n\timport { onMount, beforeUpdate } from 'svelte';\r\n\r\n\tconst urlMatcher = new RegExp(/\\?(?<title>[^\\?]+)(\\?(?<article>[^\\?]+))?/g);\r\n\r\n\tlet days,\r\n\t\tselectedDay,\r\n\t\tcurrentArticle,\r\n\t\tintersection = false;\r\n\r\n\tonMount(() => {\r\n\t\tintersection = false;\r\n\t\tfetch(\"./content/index.json\")\r\n\t\t.then(repsonse => repsonse.json())\r\n\t\t.then(list => {\r\n\t\t\tdays = list;\r\n\t\t})\r\n\t\t.then(() => {\r\n\t\t\twindow.onpopstate = ev => {\r\n\t\t\t\textractSelectionFromUrl(ev.target.location.search);\r\n\t\t\t}\r\n\t\t\textractSelectionFromUrl(window.location.search);\r\n\t\t});\r\n\t});\r\n\r\n\tbeforeUpdate(() => {\r\n\t\tintersection = false;\r\n\t\twindow.addEventListener(\"scroll\", activateIntersection);\r\n\t});\r\n\r\n\tfunction activateIntersection() {\r\n\t\twindow.removeEventListener(\"scroll\", activateIntersection);\r\n\t\tintersection = true;\r\n\t}\r\n\r\n\tfunction extractSelectionFromUrl(url) {\r\n\t\tif(url.match(urlMatcher)) {\r\n\t\t\tlet {title, article} = url.matchAll(urlMatcher).next().value.groups;\r\n\t\t\tselectedDay = days.find(el => el.title === title) || days[0];\r\n\t\t\tcurrentArticle = selectedDay.slides.find(el => el.includes(article.replace(/%20/g,\" \")));\r\n\t\t} else {\r\n\t\t\tselectedDay = days[0];\r\n\t\t}\r\n\t}\r\n\r\n\tfunction onIntersect(article) {\r\n\t\tif(!intersection) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tcurrentArticle = article;\r\n\t\tsetSearch(selectedDay.title, currentArticle.split(\"/\")[2].split(\".\")[0]);\r\n\t}\r\n\r\n\tfunction setSearch(day, article) {\r\n\t\twindow.history.replaceState(\"\", \"\", \"?\" + day + \"?\" + article );\r\n\t}\r\n\r\n\tfunction selectDay(day) {\r\n\t\tselectedDay = day;\r\n\t\twindow.history.pushState(\"\", \"\", \"?\" + day.title);\r\n\t}\r\n\r\n</script>\r\n\r\n{#if selectedDay}\r\n\t<header>\r\n\t\t<h1>{selectedDay.title}</h1>\r\n\t\t<p>{selectedDay.subtitle}</p>\r\n\t\t<nav>\r\n\t\t\t{#each days as day}\r\n\t\t\t\t<button on:click={() => selectDay(day)} class:selected={day === selectedDay}>{day.title}</button>\r\n\t\t\t{/each}\r\n\t\t</nav>\r\n\t</header>\r\n\t<main>\r\n\t{#if selectedDay.slides}\r\n\t\t{#each selectedDay.slides as article (article)}\r\n\t\t\t<IntersectionObserver on:intersect={() => onIntersect(article)} top={-window.innerHeight / 3} bottom={0}>\r\n\t\t\t\t<InteractiveArticle content={article} active={article === currentArticle}></InteractiveArticle>\r\n\t\t\t</IntersectionObserver>\r\n\t\t{/each}\r\n\t{/if}\r\n\t</main>\r\n\t<footer>\r\n\t\t<span>&copy; 2020 Louis Ritzkowski</span>\r\n\t</footer>\r\n{/if}\r\n<style>\r\n\r\n\tmain, header, footer {\r\n\t\tmax-width: 1000px;\r\n\t\tmargin: 0 auto;\r\n\t}\r\n\r\n\theader {\r\n\t\twidth: 100%;\r\n\t\tpadding: 1em;\r\n\t\tbackground-image: url('data:image/svg+xml;charset=UTF-8,<svg xmlns=\"http://www.w3.org/2000/svg\" preserveAspectRatio=\"none\" viewBox=\"0 0 100 100\"><polygon fill=\"turquoise\" points=\"0 0 75 35 80 75 75 80 73 45\"/><polygon fill=\"purple\" points=\"0 100 100 100 80 13 0 0 75 35 80 75\"/></svg>'); \r\n\t}\r\n\r\n\theader > h1 {\r\n\t\ttransform: rotate(-5deg);\r\n\t}\r\n\r\n\theader > p {\r\n\t\ttransform: translateY(-20px) rotate(-5deg);\r\n\t}\r\n\r\n\theader > nav {\r\n\t\ttransform: rotate(-5deg);\r\n\t\tdisplay: flex;\r\n\t\tflex-wrap: wrap;\r\n\t}\r\n\r\n\theader > nav > button {\r\n\t\tbackground: black;\r\n\t\tcolor: white;\r\n\t\tborder: none;\r\n\t\tborder-radius: 0;\r\n\t\tmargin: 5px;\r\n\t\ttext-transform: capitalize;\r\n\t}\r\n\r\n\theader > nav > button.selected {\r\n\t\tbackground: var(--accent);\r\n\t\tcolor: var(--highlight);\r\n\t\tborder: none;\r\n\t}\r\n\r\n\tfooter {\r\n\t\theight: 200px;\r\n\t\t\r\n\t\tbackground-image: url('data:image/svg+xml;charset=UTF-8,<svg xmlns=\"http://www.w3.org/2000/svg\" preserveAspectRatio=\"none\" viewBox=\"0 0 100 100\"><polygon fill=\"turquoise\" points=\"30 50 15 50 16 70 50 100 30 25 0 0\"/><polygon fill=\"purple\" points=\"0 0 100 0 50 100 15 50 30 25\"/></svg>'); \r\n\t\tbackground-size: 100% 100%;\r\n\t\tcolor: var(--accent);\r\n\t}\r\n\r\n\tfooter > span {\r\n\t\tdisplay: inline-block;\r\n\t\ttext-align: center;\r\n\t\twidth: 100%;\r\n\t}\r\n\r\n\tmain > :global(div > article){\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: row;\r\n\t}\r\n\r\n\tmain > :global(div > article > section) {\r\n\t\tpadding: 50px 20px;\r\n\t}\r\n\r\n\tmain > :global(div:nth-of-type(2n) > article > *:nth-child(2n-1)) {\r\n\t  background-image: url('data:image/svg+xml;charset=UTF-8,<svg xmlns=\"http://www.w3.org/2000/svg\" preserveAspectRatio=\"none\" viewBox=\"0 0 100 100\"><polygon fill=\"turquoise\" points=\"0 1 0 0 100 0 100 15\"/><polygon fill=\"purple\" points=\"0 0 100 0 100 10\"/><polygon fill=\"purple\" points=\"0 100 100 100 100 90\"/><polygon fill=\"purple\" points=\"100 0 100 100 96 100\"/></svg>'); \r\n\t  background-size: 100% 100%;\r\n\t}\r\n\r\n\tmain > :global(div:nth-of-type(2n) > article > *:nth-child(2n)) {\r\n\t\tbackground-image: url('data:image/svg+xml;charset=UTF-8,<svg xmlns=\"http://www.w3.org/2000/svg\" preserveAspectRatio=\"none\" viewBox=\"0 0 100 100\"><polygon fill=\"purple\" points=\"0 0 100 0 98 30 100 100 0 100\"/></svg>'); \r\n\t\tbackground-size: 100% 100%;\r\n\t}\r\n\r\n\r\n\tmain > :global(div:nth-of-type(2n-1) > article > *:nth-child(2n-1)) {\r\n\t\tbackground-image: url('data:image/svg+xml;charset=UTF-8,<svg xmlns=\"http://www.w3.org/2000/svg\" preserveAspectRatio=\"none\" viewBox=\"0 0 100 100\"><polygon fill=\"purple\" points=\"0 0 100 0 100 100 0 100 2 80\"/></svg>'); \r\n\t\tbackground-size: 100% 100%;\r\n\t\tcolor: var(--accent);\r\n\t}\r\n\r\n\tmain > :global(div:nth-of-type(2n) > article > *:nth-child(2n) .sandbox-wrapper ) {\r\n\t\tborder-color: var(--accent);\r\n\t}\r\n\r\n\tmain > :global(div:nth-of-type(2n-1) > article > *:nth-child(2n)) {\r\n\t  background-image: url('data:image/svg+xml;charset=UTF-8,<svg xmlns=\"http://www.w3.org/2000/svg\" preserveAspectRatio=\"none\" viewBox=\"0 0 100 100\"><polygon fill=\"orangered\" points=\"0 0 100 0 98 1 0 13\"/><polygon fill=\"purple\" points=\"0 0 100 0 0 10\"/><polygon fill=\"purple\" points=\"0 100 100 100 0 90\"/><polygon fill=\"purple\" points=\"0 0 0 100 3 0\"/></svg>'); \r\n\t  background-size: 100% 100%;\r\n\t}\r\n\r\n\r\n\r\n\th1 {\r\n\t\tcolor: #ff3e00;\r\n\t\ttext-transform: uppercase;\r\n\t\tfont-size: 4em;\r\n\t\tfont-weight: 100;\r\n\t}\r\n\r\n\r\n</style>",
    "<script>\r\n    import { onMount } from 'svelte';\r\n    import Sandbox from './Sandbox.svelte';\r\n    import CodeInput from './CodeInput.svelte';\r\n\r\n    export let editors;\r\n    export let active;\r\n    export let id;\r\n\r\n    let sandboxError;\r\n\r\n</script>\r\n\r\n{#if editors}\r\n<CodeInput bind:editors={editors}></CodeInput>\r\n<Sandbox content={active && editors} {id} on:error={e => sandboxError = e.detail} on:change={() => sandboxError = \"\"}></Sandbox>\r\n{#if active && sandboxError}\r\n    <output value={sandboxError}>{sandboxError ? sandboxError : \"\"}</output>\r\n{/if}\r\n{/if}\r\n\r\n<style>\r\n\r\n    output {\r\n        display: block;\r\n        font-family: monospace;\r\n        background: black;\r\n        color: white;\r\n        padding: 0 20px 0 41px;\r\n        transform: translate(15px, 10px) rotate(-3deg);\r\n        float: right;\r\n    }\r\n</style>\r\n\r\n\r\n\r\n",
    "<script>\r\n    import { onMount, afterUpdate } from 'svelte';\r\n    import CodeFlask from 'codeflask';\r\n\r\n    export let opts;\r\n    export let code;\r\n\r\n    const SAVE_TIMEOUT = 500;\r\n\r\n    let flask,\r\n        codeArea,\r\n        saveTimeout;\r\n        \r\n    onMount(() => {\r\n\t\tflask = new CodeFlask(codeArea, opts);\r\n\r\n\t\tflask.onUpdate(newCode => {\r\n            clearTimeout(saveTimeout);\r\n            saveTimeout = setTimeout(() => {\r\n                code = newCode;\r\n            }, SAVE_TIMEOUT);\r\n        });\r\n\t\tflask.updateCode(code);\r\n\t});\r\n\t\r\n\tafterUpdate(() => {\r\n\t\tflask.updateCode(code);\r\n    });\r\n</script>\r\n\r\n<div class=\"codeArea\" bind:this={codeArea}></div>\r\n\r\n<style>\r\n    .codeArea {\r\n        height: 100%;\r\n        position: relative;\r\n    }\r\n\r\n    :global(.codeArea .codeflask .codeflask__textarea::selection),\r\n    :global(.codeArea .codeflask .codeflask__textarea::-moz-selection) {\r\n        color: transparent;\r\n        \r\n    }\r\n\r\n    :global(.codeArea .codeflask .codeflask__pre) {\r\n        width: auto !important;\r\n    }\r\n\r\n</style>",
    "<script>\r\n    import { onMount, afterUpdate } from 'svelte';\r\n\timport { Tabs, Tab, TabList, TabPanel } from 'svelte-tabs';\r\n\timport CodeFlask from './CodeFlask.svelte';\r\n\texport let editors;\r\n\r\n\tlet initialSelectedIndex;\r\n\t\r\n\t$: {\r\n\t\tinitialSelectedIndex = [editors.html, editors.style, editors.script].findIndex(el => el !== \"\");\r\n\t}\r\n\r\n\tfunction getDegRng(min, max) {\r\n\t\tlet spread = Math.abs(min) + Math.abs(max);\r\n\t\treturn Math.random() * spread + min;\r\n\t}\r\n\r\n</script>\r\n<Tabs {initialSelectedIndex}>\r\n\t<TabList>\r\n\t\t<Tab>HTML</Tab>\r\n\t\t<Tab>CSS</Tab>\r\n\t\t<Tab>JS</Tab>\r\n\t</TabList>\r\n\t<div class=\"wrapper\">\r\n\t<TabPanel>\r\n\t\t<CodeFlask bind:code={editors.html} opts={{language: 'html', lineNumbers: true}}></CodeFlask>\r\n\t</TabPanel>\r\n\r\n\t<TabPanel>\r\n\t\t<CodeFlask bind:code={editors.style} opts={{language: 'css', lineNumbers: true}}></CodeFlask>\r\n\t</TabPanel>\r\n\r\n\t<TabPanel>\r\n\t\t<CodeFlask bind:code={editors.script} opts={{language: 'js', lineNumbers: true}}></CodeFlask>\r\n\t</TabPanel>\r\n\t</div>\r\n</Tabs>\r\n\r\n<style>\r\n\t.wrapper {\r\n\t\theight: calc(100% - 40px);\r\n\t}\r\n\r\n\t.wrapper :global(.svelte-tabs__tab-panel) {\r\n\t\theight: 100%;\r\n\t\tmargin-top: 0 !important;\r\n\t}\r\n\r\n\t.wrapper :global(.svelte-tabs__tab-panel:empty) {\r\n\t\tdisplay: none;\r\n\t}\r\n\r\n    :global(.svelte-tabs__tab-list) {\r\n        margin-bottom: .5em !important;\r\n\t}\r\n\t\r\n\t:global(.svelte-tabs__tab-list) {\r\n\t\tborder: none !important;\r\n\t}\r\n\r\n</style>",
    "<script>\r\n    import CodeEditor from './CodeEditor.svelte';\r\n    import SideArticle from './SideArticle.svelte';\r\n\r\n    import { onMount } from 'svelte';\r\n    import { getId } from '../utils/id.js';\r\n    import { read } from '../utils/exampleReader.js';\r\n\r\n    export let content;\r\n    export let active = false;\r\n\r\n    let editors,\r\n        article,\r\n        editorActive = false,\r\n        container,\r\n        id,\r\n        editContainer;\r\n\r\n    onMount(() => {\r\n        id = getId(\"sandbox\");\r\n        fetch(content)\r\n        .then(response => response.text())\r\n        .then(text => {\r\n            let src = read(text);\r\n            editors = src.editors;\r\n            article = src.article || \"\";\r\n        })\r\n        .then(() => {\r\n            if(active) {\r\n                window.scrollTo(0, container.parentElement.offsetTop);\r\n            }\r\n        });\r\n    });\r\n\r\n    function activate() {\r\n        editorActive = true;\r\n        window.addEventListener('click', deactivate)\r\n    }\r\n\r\n    function deactivate(e) {\r\n        if(!e.path.includes(editContainer)) {\r\n            window.removeEventListener('click', deactivate);\r\n            editorActive = false;\r\n        }\r\n    }\r\n</script>\r\n\r\n<article bind:this={container} data-src={content}>\r\n    <section>\r\n        <SideArticle {article}></SideArticle>\r\n    </section>\r\n\r\n    <section bind:this={editContainer} class=\"code\" on:focusin={activate}>\r\n        {#if editors}\r\n        <CodeEditor {editors} {id} active={editorActive}></CodeEditor>\r\n        {/if}\r\n    </section>\r\n    \r\n</article>\r\n\r\n<style>\r\n    article {\r\n        width: 100%;\r\n        display: flex; \r\n    }\r\n\r\n    section {\r\n        flex: 1 1 auto;\r\n    }\r\n\r\n    section.code {\r\n        flex: 10 0 50%;\r\n    }\r\n\r\n    section:empty {\r\n        flex: 0 1 100px;\r\n    }\r\n\r\n    .code:not(:empty) {\r\n        min-height: 800px;\r\n    }\r\n\r\n    .code > :global(div) {\r\n        height: 46%;\r\n    }\r\n</style>\r\n",
    "<script>\r\n\timport { onMount, createEventDispatcher } from 'svelte';\r\n\r\n\tconst dispatch = createEventDispatcher();\r\n\r\n\texport let once = false;\r\n\texport let top = 0;\r\n\texport let bottom = 0;\r\n\texport let left = 0;\r\n\texport let right = 0;\r\n\r\n\tlet intersecting = false;\r\n\tlet container;\r\n\r\n\tonMount(() => {\r\n\t\tif (typeof IntersectionObserver !== 'undefined') {\r\n\t\t\tconst rootMargin = `${bottom}px ${left}px ${top}px ${right}px`;\r\n\r\n\t\t\tconst observer = new IntersectionObserver(entries => {\r\n\t\t\t\tintersecting = entries[0].isIntersecting;\r\n\t\t\t\tif (intersecting && once) {\r\n\t\t\t\t\tobserver.unobserve(container);\r\n\t\t\t\t}\r\n\t\t\t\tif(intersecting) {\r\n\t\t\t\t\tdispatch(\"intersect\");\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}, {\r\n\t\t\t\trootMargin: rootMargin,\r\n\t\t\t\tthreshold: .5,\r\n\t\t\t});\r\n\r\n\t\t\tobserver.observe(container);\r\n\t\t\treturn () => observer.unobserve(container);\r\n\t\t}\r\n\r\n\t\tfunction handler() {\r\n\t\t\tconst bcr = container.getBoundingClientRect();\r\n\r\n\t\t\tintersecting = (\r\n\t\t\t\t(bcr.bottom + bottom) > 0 &&\r\n\t\t\t\t(bcr.right + right) > 0 &&\r\n\t\t\t\t(bcr.top - top) < window.innerHeight &&\r\n\t\t\t\t(bcr.left - left) < window.innerWidth\r\n\t\t\t);\r\n\r\n\t\t\tif (intersecting && once) {\r\n\t\t\t\twindow.removeEventListener('scroll', handler);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\twindow.addEventListener('scroll', handler);\r\n\t\treturn () => window.removeEventListener('scroll', handler);\r\n\t});\r\n</script>\r\n\r\n<style>\r\n\tdiv {\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t}\r\n</style>\r\n\r\n<div bind:this={container}>\r\n\t<slot {intersecting}></slot>\r\n</div>",
    "<script>\r\n    import { onMount, afterUpdate, createEventDispatcher } from 'svelte';\r\n    import { glue } from '../utils/exampleReader.js';\r\n    const dispatch = createEventDispatcher();\r\n\r\n    export let content;\r\n    export let id;\r\n\r\n    let sandbox, wrapper, lastContent = \"\", unloaded = true;\r\n\r\n    afterUpdate(() => {\r\n        if(content) {\r\n            if(unloaded || !compare(content, lastContent)) {\r\n                dispatch(\"change\", {});\r\n                wrapper.innerHTML = \"\";\r\n\r\n                let frame = document.createElement(\"iframe\");\r\n                frame.setAttribute(\"name\", id);\r\n                frame.setAttribute(\"autofocus\", false);\r\n                wrapper.appendChild(frame);\r\n\r\n                sandbox = window.open(\"\", id);\r\n                sandbox.document.open();\r\n                sandbox.id = id;\r\n                let newCode = glue(content);\r\n                sandbox.document.write(newCode);\r\n                sandbox.document.close();\r\n                lastContent = {...content};\r\n                unloaded = false;\r\n            } \r\n        } else {\r\n            wrapper.innerHTML = \"\";\r\n            unloaded = true;\r\n        }\r\n    });\r\n\r\n    function compare(a, b) {\r\n        return a.html === b.html && a.script === b.script && a.style === b.style;\r\n    }\r\n\r\n    function message(msg) {\r\n        if(msg.data.id === id) {\r\n            let {message, lineNumber, columnNumber} = msg.data;\r\n            message ? dispatch(\"error\", message + \"  (at \" + lineNumber + \":\" + columnNumber + \")\") : {};\r\n        }\r\n    }\r\n\r\n    function extractErrorLine(stack) {\r\n        stack.indexOf(\"eval at <anonymous\")\r\n    }\r\n\r\n</script>\r\n\r\n<div class=\"sandbox-wrapper\" bind:this={wrapper}></div>\r\n\r\n<svelte:window on:message={message}></svelte:window>\r\n\r\n<style>\r\n    div {\r\n        width: 100%;\r\n        margin-top: 10px;\r\n        height: 100%;\r\n    }\r\n    div :global(iframe) {\r\n        width: 100%;\r\n        height: 100%;\r\n        border: none;\r\n    }\r\n\r\n    div {\r\n        border: 1px solid grey;\r\n    }\r\n</style>",
    "<script>\r\n    import { onMount, afterUpdate } from 'svelte';\r\n    export let article;\r\n\r\n    let container;\r\n    \r\n    afterUpdate(() => {\r\n        article !== undefined ? container.innerHTML = article : {};\r\n    });\r\n</script>\r\n\r\n<article class=\"side-article\" bind:this={container}>\r\n    <div class=\"skeleton\">\r\n        <h2>Great Standin Heading</h2>\r\n        There will be some text <code>here</code>.\r\n        <ul>\r\n            <li>Some placeholder text.</li>\r\n            <li>You never know who might read this. <code>Aliens?</code></li>\r\n            <li><code>a + b = c</code>, stunning realisations occur rapidly.</li>\r\n            <li>Some placeholder text.</li>\r\n            <li>You never know who might read this. <code>Aliens?</code></li>\r\n            <li><code>a + b = c</code>, stunning realisations occur rapidly.</li>\r\n            <li>Some placeholder text.</li>\r\n            <li>You never know who might read this. <code>Aliens?</code></li>\r\n            <li><code>a + b = c</code>, stunning realisations occur rapidly.</li>\r\n            <li>Some placeholder text.</li>\r\n            <li>You never know who might read this. <code>Aliens?</code></li>\r\n            <li><code>a + b = c</code>, stunning realisations occur rapidly.</li>\r\n        </ul>\r\n    </div>\r\n</article>\r\n\r\n\r\n<style>\r\n\r\n    .skeleton {\r\n        filter: blur(5px);\r\n    }\r\n\r\n    article :global(img) {\r\n        max-width: 100%;\r\n    }\r\n\r\n    article :global(figure) {\r\n        float: right;\r\n    }\r\n\r\n    article :global(figure.full-width) {\r\n        width: 100%;\r\n    }\r\n\r\n    article :global(figcaption) {\r\n        text-align: center;\r\n    }\r\n\r\n</style>"
  ],
  "names": [],
  "mappings": "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"
}